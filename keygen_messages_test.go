package bls_tss

import (
	"encoding/json"
	"github.com/stretchr/testify/assert"
	"testing"
)

func TestKeygenRoundMsg(t *testing.T) {
	examples := []string{
		"{\"sender\":1,\"receiver\":null,\"body\":{\"Round1\":{\"com\":[185,120,129,10,16,104,222,69,34,233,113,207,109,235,201,214,62,31,179,215,155,224,22,32,22,49,23,94,239,187,50,141]}}}",
		"{\"sender\":2,\"receiver\":null,\"body\":{\"Round2\":{\"blind_factor\":[51,120,251,107,20,146,180,151,203,35,235,96,111,50,195,210,45,114,22,104,0,85,25,228,47,207,48,205,164,83,115,58],\"y_i\":{\"curve\":\"bls12_381_1\",\"point\":[164,128,21,238,237,122,161,90,158,231,169,112,135,193,90,83,211,144,44,64,247,65,137,181,230,129,53,59,241,167,114,159,165,64,26,242,229,199,198,174,119,101,15,103,231,229,118,164]}}}}",
		"{\"sender\":1,\"receiver\":2,\"body\":{\"Round3\":{\"i\":1,\"t\":1,\"n\":3,\"j\":2,\"commitments\":[{\"curve\":\"bls12_381_1\",\"point\":[164,199,103,95,33,143,94,62,79,117,51,160,28,112,202,157,97,178,237,202,144,134,146,234,64,110,78,136,115,151,83,21,150,22,186,33,251,56,95,181,12,202,209,51,50,177,66,37]},{\"curve\":\"bls12_381_1\",\"point\":[177,36,18,86,162,6,186,210,239,97,124,57,196,215,2,124,28,43,248,231,126,134,20,109,249,21,50,6,255,137,170,18,153,107,30,39,113,13,52,16,165,160,109,245,239,244,100,138]}],\"share\":{\"curve\":\"bls12_381_1\",\"scalar\":[22,174,122,230,245,66,201,4,116,207,36,43,122,185,150,255,59,113,3,63,243,188,43,24,189,39,231,78,93,88,10,55]}}}}",
		"{\"sender\":3,\"receiver\":null,\"body\":{\"Round4\":{\"pk\":{\"curve\":\"bls12_381_1\",\"point\":[169,108,148,58,128,112,173,237,95,247,127,68,74,153,99,110,252,80,104,254,204,126,61,125,240,171,249,249,67,45,71,174,183,64,68,133,0,141,227,7,178,181,81,195,216,43,42,151]},\"pk_t_rand_commitment\":{\"curve\":\"bls12_381_1\",\"point\":[142,194,149,130,85,62,216,156,254,10,71,118,237,141,180,93,246,137,63,153,129,149,177,199,122,14,2,10,47,115,87,194,92,171,60,197,135,52,114,216,227,227,148,36,53,51,77,81]},\"challenge_response\":{\"curve\":\"bls12_381_1\",\"scalar\":[99,104,191,77,6,127,229,165,109,70,146,59,70,109,10,59,87,1,124,50,50,130,87,9,56,174,164,66,216,172,77,103]}}}}",
	}
	var err error
	for _, example := range examples {
		msg := KeygenRoundMsg{}
		err = json.Unmarshal([]byte(example), &msg)
		assert.Nil(t, err)
		jsonBytes, err := json.Marshal(msg)
		assert.Nil(t, err)
		assert.Equal(t, example, string(jsonBytes))
	}
}

func TestLocalKey(t *testing.T) {
	example := "{\"shared_key\":{\"i\":3,\"t\":1,\"n\":3,\"vk\":{\"curve\":\"bls12_381_1\",\"point\":[147,245,81,1,38,241,14,113,141,44,43,234,66,157,115,75,154,57,216,99,179,3,65,61,182,64,101,41,223,180,238,193,212,95,229,126,219,41,251,244,164,214,179,43,238,150,91,226]},\"sk_i\":{\"curve\":\"bls12_381_1\",\"scalar\":[204,7,171,107,137,1,48,214,94,148,179,255,218,56,213,211,22,193,139,174,74,240,18,37,143,164,91,217,218,189,247,44]}},\"vk_vec\":[{\"curve\":\"bls12_381_1\",\"point\":[128,77,56,128,159,197,88,101,57,220,103,42,145,96,225,134,39,101,49,131,50,204,59,200,180,225,238,20,220,24,199,194,192,84,163,216,46,170,53,125,234,26,155,130,77,34,130,144]},{\"curve\":\"bls12_381_1\",\"point\":[173,200,135,100,170,254,19,58,227,28,231,250,130,152,105,141,120,66,218,46,29,157,91,149,42,244,77,122,100,24,163,158,101,0,173,191,90,132,166,139,100,74,143,77,91,88,114,81]},{\"curve\":\"bls12_381_1\",\"point\":[169,108,148,58,128,112,173,237,95,247,127,68,74,153,99,110,252,80,104,254,204,126,61,125,240,171,249,249,67,45,71,174,183,64,68,133,0,141,227,7,178,181,81,195,216,43,42,151]}]}"
	msg := LocalKey{}
	err := json.Unmarshal([]byte(example), &msg)
	assert.Nil(t, err)
	jsonBytes, err := json.Marshal(msg)
	assert.Nil(t, err)
	assert.Equal(t, example, string(jsonBytes))
}
